@import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,400;0,700;1,400;1,700&family=Oswald:wght@400;700&display=swap');

$color-blue: rgb(63, 63, 137);
$bg-earthtone: #877a60;
$bg-watermelon: #914e47;

:root {
}

@mixin no-select {
	-moz-user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
	-o-user-select: none;
	user-select: none;
	cursor: default;
}

@mixin center-bg($size: contain) {
	background-size: $size;
	background-repeat: no-repeat;
	background-position: center;
}

@mixin flex-center {
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin bright-hover($hover: 1.15, $active: 0.9) {
	&:hover {
		filter: brightness($hover);
	}
	@if $active != none {
		&:active {
			filter: brightness($active);
		}
	}
}

* {
	box-sizing: border-box;
	font-family: 'Nunito';
	position: relative;
	cursor: default;
	font-weight: normal;
}

html {
	height: 100vh;
	width: 100vw;
	position: relative;
	font-size: 16px;
  background-color: slategray;
}

body {
  width: 100%;
  height: 100%;
	margin: 0;
}

h1, h2 {
  font-weight: bold;
}

#root {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: flex-start;
  
  & > section {
    margin: 2rem;
  }

  & > h1 {
    width: 100%;
    text-align: center
  }
} 

.gameContainer {
  @include flex-center();
  flex-flow: column nowrap;
  width: fit-content;

  select.difficulty {
    width: 10em;
    text-align: center;
    font-size: 1.1em;
  }

  & > * {
    margin: 0.5rem 0;
  }
}

.boardContainer {
  border: 4px outset #cacaca;
  
  .gameBar {
    $gamebar-height: 3rem;
    width: 100%;
    height: $gamebar-height;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    justify-items: center;
    background-color: #a1a1a1;
    border-bottom: 4px outset #cacaca;

    & > span:first-child {
      margin-right: auto;
    }
    & > span:last-child {
      margin-left: auto;
    }

    & > .reset {
      height: 100%;
      width: $gamebar-height;
      background-image: url('../assets/restart.png');
      @include center-bg(70%);
    }

    & > .timer, & > .flagsDisplay {
      font-size: 1.8em;
      color: red;
      font-family: monospace;
      background-color: rgba(0, 0, 0, 0.75);
      padding: 0.1em 0.5em;
    }
  }
}

.gameBoard {
  --square-size: 40px;

  border: 1px solid black;
  border-top: 4px outset #cacaca;
  display: grid;
  grid-template-columns: repeat(9, var(--square-size));
  grid-auto-rows: var(--square-size);
  width: min-content;
  height: min-content;
  user-select: none;

  & > div {
    @include flex-center();
    @include center-bg(75%);

    width: var(--square-size);
    height: var(--square-size);
    background-color: gray;
    border: 1px solid rgb(88, 88, 88);

    font-size: 1.4em;
    font-weight: bold;

    overflow: hidden;

    /*
      Styling behavior:
      (isMine, isFlagged, isRevealed)

      Mine  Flag  Rev
      Y     Y     Y    ->  Flag and hide
      Y     Y     N    ->  Flag and hide
      Y     N     Y    ->  Reveal
      Y     N     N    ->  Hide
      N     Y     Y    ->  Flag, but still hide and show X over it
      N     Y     N    ->  Flag and hide
      N     N     Y    ->  Reveal
      N     N     N    ->  Hide

      - Flagged tiles should always have flag image
      - Hidden tiles should always have lighter background and border
      - Flagged non-mine tiles whose contents have been revealed by a loss (.hidden.F.s-*)
          should not display their contents, but should have an X overlay to show the flag was incorrect
      - Any tiles that are not hidden should show their contents
      - The mine tile that was clicked to trigger a loss should have a deeper red background
    */

    &.F {
      background-image: url('../assets/flag.png');
    }

    &.hidden {
      border: 3px outset #cacaca;
      background-color: rgba(173, 173, 173);

      &:hover {
        filter: brightness(1.05);
      }

      // &:not(.F):active {
      //   filter: brightness(0.9);
      // }

      &.F[class*="s-"]:not(.s-M) {
        $bad-flag-border-size: 0.2rem;
        @mixin pseudo-base {
          content: '';
          position: absolute;
          z-index: 1;
          width: 100%;
          height: 0;
          border-top: $bad-flag-border-size solid firebrick;
        }

        background-blend-mode: darken;

        &::after {
          @include pseudo-base();
          
          transform:
            skewY(-45deg)
            translateY(calc(50% - ($bad-flag-border-size / 2)))
          ;
        }
        &::before {
          @include pseudo-base();
          
          transform:
            skewY(45deg)
            translateY(calc(-50% + ($bad-flag-border-size / 2)))
          ;
        }
      }
    }
    
    &:not(.hidden) {
      &.s-M {
        background-image: url('../assets/snek.png');
        background-color: $bg-watermelon;
  
        &.bad {
          background-color: maroon;
        }
      }
    }

    &.s-1 {
      color: blue;
    }
    &.s-2 {
      color: green;
    }
    &.s-3 {
      color: red;
    }
    &.s-4 {
      color: purple;
    }
    &.s-5 {
      color: black;
    }
    &.s-6 {
      color: rgb(76, 76, 76);
    }
    &.s-7 {
      color: maroon;
    }
    &.s-8 {
      color: turquoise;
    }
  }
}

.scores {
  @include flex-center();
  width: fit-content;
  flex-flow: column;

  th {
    padding: 0.25em 1.5rem;
    font-weight: bold;
  }
}